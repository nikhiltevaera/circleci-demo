version: 2.1
orbs:
  aws-cli: circleci/aws-cli@3.1.1
  aws-ecr: circleci/aws-ecr@8.1.3
  node: circleci/node@4.7
  discord: antonioned/discord@0.1.0

parameters:
  GHA_Event:
    type: string
    default: ""
  GHA_Actor:
    type: string
    default: ""
  GHA_Action:
    type: string
    default: ""
  GHA_Meta:
    type: string
    default: ""

jobs:
  build-test-deploy-api-svc:
    working_directory: ~/circleci-demo/
    docker:
      - image: cimg/node:20.13
    steps:
      - checkout
      - run: >-
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ./.npmrc
      - aws-ecr/build-and-push-image:
          extra-build-args: '--compress'
          no-output-timeout: 20m
          path: .
          push-image: true
          repo: $AWS_ECR_API_SVC_REPO_NAME
          setup-remote-docker: true
          dockerfile: Dockerfile
          tag: $AWS_REGION
          create-repo: true
      - run: >-
          aws ecs update-service --force-new-deployment --service $AWS_ECS_API_SVC_SERVICE_NAME --cluster $AWS_ECS_SHR_CLUSTER_NAME
      - discord/status:
          webhook: $DISCORD_NOTIFICATIONS_WEBHOOK_URL

  request-approval:
    working_directory: ~/circleci-demo/
    docker:
      - image: cimg/node:20.13
    steps:
      - discord/approval:
          webhook: $DISCORD_APPROVALS_WEBHOOK_URL
  echo-print:
    docker:
      - image: cimg/node:20.13
    steps:
      - run: echo pipeline.parameters.GHA_Action pipeline.parameters.GHA_Event

workflows:
  echo-command:
    # when:
    #   and:
    #     - and: [<< pipeline.parameters.GHA_Action >>]
    #     - equal: ["push", << pipeline.parameters.GHA_Event >>]
    jobs:
      - echo-print            
  build-deploy:
    when:
      and:
        - and: [<< pipeline.parameters.GHA_Action >>]
        - equal: ["push", << pipeline.parameters.GHA_Event >>]
    jobs:         
      - request-approval:
          context: aws-backend-dev
      - hold:
          type: approval
          requires:
            - request-approval
      - build-test-deploy-api-svc:
          requires:
            - hold      
